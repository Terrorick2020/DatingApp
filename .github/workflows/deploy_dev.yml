name: Deploy DatingApp to Dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      changed_submodule: ${{ steps.check-modules.outputs.changed_submodule }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Check Changed Submodule
        id: check-modules
        run: |
          git fetch --depth=2 origin dev
          CHANGED_MODULE=$(git diff --name-only HEAD^ HEAD | grep -E "^(bot|api|client)/" | cut -d '/' -f1 | uniq)
          if [ -n "$CHANGED_MODULE" ]; then
            echo "changed_submodule=$CHANGED_MODULE" >> "$GITHUB_ENV"
            echo "changed_submodule=$CHANGED_MODULE" >> "$GITHUB_OUTPUT"
          fi

  deploy_partial:
    needs: detect_changes
    runs-on: ubuntu-latest
    if: needs.detect_changes.outputs.changed_submodule != ''

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/www/cyberslavs.fun/
            git checkout dev
            git pull origin dev
            git submodule update --init --recursive --remote

            CHANGED_MODULE=${{ needs.detect_changes.outputs.changed_submodule }}
            echo "Rebuilding $CHANGED_MODULE"

            docker-compose build $CHANGED_MODULE
            docker-compose up -d --build $CHANGED_MODULE
