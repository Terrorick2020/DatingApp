name: Deploy Submodules

on:
  repository_dispatch:
    types: [submodule_update]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      changed_submodule: ${{ steps.check-modules.outputs.changed_submodule }}
      branch_ref: ${{ github.event.client_payload.ref }}

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Detect submodule changes
        id: check-modules
        run: |
          git submodule status --recursive > before.lst
          git submodule update --remote --recursive
          git submodule status --recursive > after.lst
          
          CHANGED_SUBMODULES=$(diff --unchanged-line-format= --old-line-format= --new-line-format=%L before.lst after.lst |
            awk '{gsub(/[+-]/, ""); split($2, a, "/"); print a[1]}' |
            sort -u |
            tr '\n' ' ')

          if [ -z "$CHANGED_SUBMODULES" ]; then
            echo "No submodules changed"
            exit 0
          fi

          echo "changed_submodule=${CHANGED_SUBMODULES%% }" >> $GITHUB_OUTPUT

  deploy_partial:
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.changed_submodule != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect_changes.outputs.changed_submodule) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ needs.detect_changes.outputs.branch_ref }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USER }}/${{ matrix.service }}:partial-${{ github.sha }}
            ${{ secrets.DOCKER_USER }}/${{ matrix.service }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/${{ matrix.service }}-deps:latest
          cache-to: type=inline,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export DOCKER_USER=${{ secrets.DOCKER_USER }}
            cd ~/www/cyberslavs.fun
            
            # Обновляем только измененные сервисы
            for service in ${{ join(matrix.service, ' ') }}; do
              docker compose pull $service
              docker compose up -d --no-deps $service
            done
            
            docker system prune -f