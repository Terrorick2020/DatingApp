name: Deploy Submodules

on:
  repository_dispatch:
    types: [submodule_update]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      changed_submodules: ${{ steps.check-modules.outputs.changed_submodules }}
      branch_ref: ${{ github.event.client_payload.ref }}

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 2  # Для сравнения с предыдущим коммитом

      - name: Get changed submodules
        id: check-modules
        run: |
          # Получаем список измененных подмодулей
          CHANGED_SUBMODULES=$(git diff --name-only HEAD^ HEAD | grep -o 'submodules/.*/' | cut -d'/' -f2 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "changed_submodules=$CHANGED_SUBMODULES" >> $GITHUB_OUTPUT

  deploy_partial:
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.changed_submodules != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect_changes.outputs.changed_submodules) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ needs.detect_changes.outputs.branch_ref }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USER }}/${{ matrix.service }}:latest
            ${{ secrets.DOCKER_USER }}/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/${{ matrix.service }}-deps:latest
          cache-to: type=inline,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export DOCKER_USER=${{ secrets.DOCKER_USER }}
            cd ~/www/cyberslavs.fun
            docker compose pull ${{ matrix.service }}
            docker compose up -d --force-recreate ${{ matrix.service }}
            docker system prune -f