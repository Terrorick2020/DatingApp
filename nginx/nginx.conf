worker_processes auto;
worker_rlimit_nofile 4096;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # Параметры Nginx
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    keepalive_timeout 65s;
    keepalive_requests 10000;

    # Время соединений
    proxy_read_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;

    # Заголовки безопасности
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "ALLOWALL";
    add_header Content-Security-Policy "frame-ancestors https://t.me https://web.telegram.org https://web.telegram.org.kz";

    # Параметры сжатия файлов
    gzip on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript
               application/xml application/xml+rss application/atom+xml
               application/xhtml+xml image/svg+xml application/font-woff
               application/font-woff2;

    # Ускорение отдачи статических файлов
    open_file_cache max=1000 inactive=60s;
    open_file_cache_valid 120s;

    # Ограничения одновременных соединений
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    limit_req_zone  $binary_remote_addr zone=req_limit:10m rate=5r/s;

    # Логирование статистики
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$request_time"';
    access_log /var/log/nginx/access.log main buffer=16k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # HTTP сервер - редирект на HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name vmestedate.ru;

        return 301 https://$server_name$request_uri;
    }

    # HTTPS сервер
    server {
        listen 443 ssl;
        listen 443 quic reuseport;
        listen [::]:443 ssl;
        listen [::]:443 quic reuseport;
        http2 on;
        http3 on;

        # Домен
        server_name vmestedate.ru;

        # SSL настройки
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_protocols TLSv1.3 TLSv1.2;
        ssl_ecdh_curve X25519:secp384r1;
        ssl_ciphers 'DEFAULT';
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # HTTP/3 promotion
        add_header Alt-Svc 'h3=":443"; ma=86400';
        ssl_early_data on;
        quic_retry on;
        quic_gso on;

        # Прокси для API
        location /api/ {
            proxy_http_version 1.1;
            proxy_pass http://api:3000/;

            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Документация Swagger API
        location /docs/ {
            limit_conn conn_limit 5;
            limit_req zone=req_limit burst=5 nodelay;

            proxy_http_version 1.1;
            proxy_pass http://api:3000/;

            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket для Socket.IO
        location /socket.io/ {
            proxy_http_version 1.1;
            proxy_pass http://ws:7000/socket.io/;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-NginX-Proxy false;

            proxy_read_timeout 360s;
            proxy_connect_timeout 360s;
            proxy_send_timeout 360s;
            proxy_buffering off;
        }

        # WebSocket для клиентского приложения
        location /ws/ {
            limit_conn conn_limit 6;
            limit_req zone=req_limit burst=3 nodelay;

            proxy_http_version 1.1;
            proxy_pass http://client:4173/;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-NginX-Proxy false;

            proxy_read_timeout 360s;
            proxy_connect_timeout 360s;
            proxy_send_timeout 360s;

            proxy_buffering off;
        }

        # Kеширование статических файлов
        location ~* \.(js|css|png|jpg|jpeg|webm|gif|mp3|mp4|ogg|ico|svg|woff|woff2|eot|ttf|otf|map|webp|avif|json|xml|wasm|webmanifest)$ {
            limit_conn conn_limit 60;
            limit_req zone=req_limit burst=40 nodelay;

            proxy_http_version 1.1;
            proxy_pass http://client:4173;

            expires 7d;
            add_header Cache-Control "public, max-age=604800, immutable";

            proxy_set_header Host $host;
            proxy_set_header Connection "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Основной контент (клиентское приложение)
        location / {
            limit_conn conn_limit 6;
            limit_req zone=req_limit burst=3 nodelay;

            proxy_http_version 1.1;
            proxy_pass http://client:4173/;

            proxy_set_header Host $host;
            proxy_set_header Connection "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_intercept_errors on;
        }

        # Документация Состояние Nginx
        location /nginx_status {
            stub_status on;
            satisfy any;

            allow all;
            deny all;

            proxy_intercept_errors on;
        }

        # Информация ошибки в виде html
        location = /error.html {
            root /usr/share/nginx/html;
            ssi on;
            internal;
        }

        # Защита от DDoS
        client_header_timeout 5s;
        client_body_timeout 5s;
        limit_conn conn_limit 70;
        limit_req zone=req_limit burst=50 nodelay;

        # Обработка ошибок
        error_page 400 401 403 404 500 502 503 504 /error.html;
    }
}