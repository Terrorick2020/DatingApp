input {
  # Вход от Filebeat
  beats {
    port => 5044
  }
  
  # TCP вход для прямых логов
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # UDP вход для системных логов
  udp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # Парсинг логов приложения
  if [fields][log_type] == "app" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{DATA:context}\]: %{GREEDYDATA:log_message}" 
      }
    }
    
    # Парсинг HTTP запросов
    if [log_message] =~ /HTTP/ {
      grok {
        match => { 
          "log_message" => "%{TIMESTAMP_ISO8601:http_timestamp} %{WORD:method} %{URIPATH:path} - IP: %{IP:client_ip} - Status: %{INT:status_code} - %{INT:duration}ms" 
        }
      }
    }
    
    # Парсинг API запросов
    if [log_message] =~ /API Response/ {
      grok {
        match => { 
          "log_message" => "%{TIMESTAMP_ISO8601:api_timestamp} %{WORD:api_method} %{URIPATH:api_path} - Success: %{WORD:success} - %{INT:api_duration}ms" 
        }
      }
    }
    
    # Парсинг ошибок
    if [level] == "error" {
      mutate {
        add_tag => [ "error" ]
      }
    }
    
    # Парсинг предупреждений
    if [level] == "warn" {
      mutate {
        add_tag => [ "warning" ]
      }
    }
  }
  
  # Парсинг Docker логов
  if [fields][log_type] == "docker" {
    grok {
      match => { 
        "message" => "\[%{DATA:container_name}\] %{GREEDYDATA:docker_message}" 
      }
    }
  }
  
  # Добавление метаданных
  mutate {
    add_field => { 
      "service" => "dating-app" 
      "environment" => "production" 
    }
  }
  
  # Парсинг JSON полей
  if [log_message] =~ /^\{.*\}$/ {
    json {
      source => "log_message"
      target => "parsed_log"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "dating-app-logs-%{+YYYY.MM.dd}"
  }
  
  # Для отладки
  stdout {
    codec => rubydebug
  }
}
