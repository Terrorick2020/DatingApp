version: '3.8'

services:
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - planner_network
    volumes:
      - db_data:/var/lib/postgresql
    ports:
      - '5432:5432'
    env_file:
      - .env

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - planner_network
    volumes:
      - redis_data:/data

  bot:
    image: ${DOCKER_USER}/bot:latest
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - planner_network
    env_file:
      - bot/.env
    ports:
      - '9000:9000'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        labels: 'service=bot'

  api:
    image: ${DOCKER_USER}/api:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - planner_network
    volumes:
      - ./logs:/api/logs
    env_file:
      - api/.env
    ports:
      - '3000:3000'
      - '7755:7755'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        labels: 'service=api'

  ws:
    image: ${DOCKER_USER}/ws:latest
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - api
    networks:
      - planner_network
    env_file:
      - ws/.env
    environment:
      TCP_HOST: ws
      TCP_PORT: 7756
      API_TCP_HOST: api
      API_TCP_PORT: 7755
      REDIS_HOST: redis
    ports:
      - '7000:7000'
      - '7756:7756'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        labels: 'service=ws'

  client:
    image: ${DOCKER_USER}/client:latest
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - planner_network
    environment:
      - VITE_API_URL=https://3dating.fun/api
      - VITE_WS_URL=wss://3dating.fun
    ports:
      - '4178:4178'
    env_file:
      - client/.env

  proxy:
    image: ${DOCKER_USER}/nginx-brotli:latest
    restart: unless-stopped
    depends_on:
      - api
      - client
      - ws
    networks:
      planner_network:
        aliases:
          - api
          - client
          - ws
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/error.html:/usr/share/nginx/html/error.html
      - certbot_data:/var/www/certbot
    command: ['/bin/sh', '-c', "nginx -g 'daemon off;'"]

volumes:
  certbot_data:
  db_data:
  redis_data:

networks:
  planner_network:
    driver: bridge
