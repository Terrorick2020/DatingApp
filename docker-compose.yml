version: '3.8'

services:
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - planner_network
    ports:
      - "5432:5432"
  
  bot:
    image: ${DOCKER_USER}/bot:latest
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    networks:
      - planner_network
    env_file:
      - bot/.env
    ports:
      - "9000:9000"

  api:
    image: ${DOCKER_USER}/api:latest
    restart: unless-stopped
    depends_on:
      - db
      - bot
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - planner_network
    ports:
      - "3000:3000"

  client:
    image: ${DOCKER_USER}/client:latest
    restart: unless-stopped
    environment:
      - VITE_API_URL=https://3dating.fun/api
      - VITE_WS_URL=wss://3dating.fun
    depends_on:
      - db
      - bot
      - api
    networks:
      - planner_network
    ports:
      - "4173:4173"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:4173"]
      interval: 30s
      timeout: 10s
      retries: 3
  proxy:
    build: ./nginx
    restart: unless-stopped
    depends_on:
      - db
      - bot
      - api
      - client:
          condition: service_healthy
    networks:
      - planner_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - certbot_data:/var/www/certbot
    command: ["/bin/bash", "-c", "nginx -g 'daemon off;'"] 

volumes:
  certbot_data:

networks:
  planner_network:
    driver: bridge
