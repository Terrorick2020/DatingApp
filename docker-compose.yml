services:
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - planner_network
    env_file:
      - .env
    ports:
      - "5432:5432"

  bot:
    image: ${DOCKER_USER}/bot:latest
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    networks:
      - planner_network
    env_file:
      - bot/.env
    ports:
      - "9000:9000"

  api:
    image: ${DOCKER_USER}/api:latest
    restart: unless-stopped
    depends_on:
      - db
      - bot
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - planner_network
    volumes:
      - ./logs:/usr/app/logs
    env_file:
      - api/.env
    ports:
      - "3000:3000"

  client:
    build: ./client
    restart: unless-stopped
    environment:
      - VITE_API_URL=https://3dating.fun/api
      - VITE_WS_URL=wss://3dating.fun
    depends_on:
      - db
      - bot
      - api
    networks:
      - planner_network
    env_file:
      - client/.env
    ports:
      - "4173:4173"

  proxy:
    build: ./nginx
    restart: unless-stopped
    depends_on:
      - db
      - bot
      - api
      - client
    networks:
      - planner_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - certbot_data:/var/www/certbot
    command: ["/bin/bash", "-c", "nginx -g 'daemon off;'"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - planner_network
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - planner_network
    ports:
      - "5601:5601"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/usr/app/logs 
    networks:
      - planner_network
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"

volumes:
  certbot_data:
  elasticsearch_data:

networks:
  planner_network:
    driver: bridge